{"id":"main.js","dependencies":[{"name":"E:\\前端\\package.json","includedInParent":true,"mtime":1633951567210}],"generated":{"js":"// const div = dom.create(' <div>11111</div> ')\n//.tirm() 函数可以去除字符串两边的空格 \n// 为了<td></td>这个特殊的标签 所以需要一个容纳度高的盒子来容纳 具体看dom.js\n// console.log(div);\n// dom.after(test, div)\n// dom.before(test,div)\n// dom.append(test,div)\n// dom.wrap(test,div)\n// console.log(empty);\n// console.log(window.empty);\n// const sss = dom.empty(empty)\n// console.log(sss);\n// dom.attr(test, 'class', 'hicc')\n// console.log(test);\n// const ccc = dom.attr(test, 'class')\n// console.log(ccc);\n// dom.text(test,'sssssssss')\n// dom.html(test,'<div>kkk</div>')\n// dom.style(test,{border:'1px solid red',color:'blue'})\n// dom.class.add(test,'red')  \n// dom.class.add(test,'redsss')  \n// dom.class.remove(test,'redsss')  \n// const fn = () => {\n//   console.log('点击了');\n// }\n// dom.on(test, 'click',fn)\n// dom.off(test, 'click', fn)\n// const s = dom.find('#empty')[0]\n// const ss = dom.find('#e',xxx)[0]\n// console.log(s);\n// console.log(ss);\n// console.log(dom.parent(test)); \n// console.log(dom.siblings(e1)); \n// console.log(dom.previous(e1)); \n// console.log(dom.next(e1)); \n\n// const t = dom.find('#travel')[0]\n// dom.each(dom.children(t),(n)=>dom.style(n,'color','red'))\n\nconsole.log(dom.index(t2));","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"name":"console","generated":{"line":40,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"name":"log","generated":{"line":40,"column":8},"source":"main.js","original":{"line":40,"column":8}},{"generated":{"line":40,"column":11},"source":"main.js","original":{"line":40,"column":0}},{"name":"dom","generated":{"line":40,"column":12},"source":"main.js","original":{"line":40,"column":12}},{"name":"index","generated":{"line":40,"column":16},"source":"main.js","original":{"line":40,"column":16}},{"generated":{"line":40,"column":21},"source":"main.js","original":{"line":40,"column":12}},{"name":"t2","generated":{"line":40,"column":22},"source":"main.js","original":{"line":40,"column":22}},{"generated":{"line":40,"column":24},"source":"main.js","original":{"line":40,"column":12}},{"generated":{"line":40,"column":25},"source":"main.js","original":{"line":40,"column":0}}],"sources":{"main.js":"// const div = dom.create(' <div>11111</div> ')\r\n//.tirm() 函数可以去除字符串两边的空格 \r\n// 为了<td></td>这个特殊的标签 所以需要一个容纳度高的盒子来容纳 具体看dom.js\r\n// console.log(div);\r\n// dom.after(test, div)\r\n// dom.before(test,div)\r\n// dom.append(test,div)\r\n// dom.wrap(test,div)\r\n// console.log(empty);\r\n// console.log(window.empty);\r\n// const sss = dom.empty(empty)\r\n// console.log(sss);\r\n// dom.attr(test, 'class', 'hicc')\r\n// console.log(test);\r\n// const ccc = dom.attr(test, 'class')\r\n// console.log(ccc);\r\n// dom.text(test,'sssssssss')\r\n// dom.html(test,'<div>kkk</div>')\r\n// dom.style(test,{border:'1px solid red',color:'blue'})\r\n// dom.class.add(test,'red')  \r\n// dom.class.add(test,'redsss')  \r\n// dom.class.remove(test,'redsss')  \r\n// const fn = () => {\r\n//   console.log('点击了');\r\n// }\r\n// dom.on(test, 'click',fn)\r\n// dom.off(test, 'click', fn)\r\n// const s = dom.find('#empty')[0]\r\n// const ss = dom.find('#e',xxx)[0]\r\n// console.log(s);\r\n// console.log(ss);\r\n// console.log(dom.parent(test)); \r\n// console.log(dom.siblings(e1)); \r\n// console.log(dom.previous(e1)); \r\n// console.log(dom.next(e1)); \r\n\r\n// const t = dom.find('#travel')[0]\r\n// dom.each(dom.children(t),(n)=>dom.style(n,'color','red'))\r\n\r\nconsole.log(dom.index(t2));"},"lineCount":null}},"hash":"373d31af110b8bd58df31badbb396eae","cacheData":{"env":{}}}