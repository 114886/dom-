{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","has","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","x","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.89b517cc.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  //创建节点\r\n  create(string) {\r\n    const container = document.createElement('template')\r\n    container.innerHTML = string.trim()\r\n    return container.content.firstChild\r\n  },\r\n\r\n  //在节点后面新增节点\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n  },\r\n\r\n  //用于在节点前面新增节点\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node)\r\n  },\r\n\r\n  //节点新增孩子\r\n  append(parent, node) {\r\n    parent.appendChild(node)\r\n  },\r\n\r\n  //节点新增父亲\r\n  wrap(node, parent) {\r\n    dom.before(node, parent)\r\n    dom.append(parent, node)\r\n  },\r\n\r\n  //删除节点\r\n  remove(node) {\r\n    node.parentNode.removeChild(node)\r\n    return node //防止有需要引用节点\r\n  },\r\n\r\n  //删除节点所有儿子\r\n  empty(node) {\r\n    const {\r\n      childNodes\r\n    } = node\r\n    const array = []\r\n    while (node.firstChild) {\r\n      array.push(dom.remove(node.firstChild))\r\n    }\r\n    return array //防止有需要引用节点\r\n  },\r\n\r\n  //读写属性\r\n  attr(node, name, value) { //重载  根据参数写不同个数 \r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value)\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name)\r\n    }\r\n  },\r\n\r\n  //修改节点内容\r\n  text(node, string) { //适配\r\n    if (arguments.length === 2) {\r\n      if ('innerText' in node) {\r\n        node.innerText = string\r\n      } else {\r\n        node.textContent = string\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if ('innerText' in node) {\r\n        return node.innerText\r\n      } else {\r\n        return node.textContent\r\n      }\r\n    }\r\n  },\r\n\r\n  //修改html\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML\r\n    }\r\n  },\r\n\r\n  //修改样式\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      node.style[name] = value\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === 'string') {\r\n        return node.style[name]\r\n      } else if (name instanceof Object) {\r\n        for (let key in name) {\r\n          node.style[key] = name[key]\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  //class操作\r\n  class: {\r\n    add(node,className) {\r\n      node.classList.add(className)\r\n    },\r\n    remove(node,className) {\r\n      node.classList.remove(className)\r\n    },\r\n    has(node, className) {\r\n      return node.classList.has(className)\r\n    }\r\n  }, \r\n\r\n  //监听事件封装\r\n  on(node,eventName,fn) {\r\n    node.addEventListener(eventName,fn)\r\n  },\r\n  off(node,eventName,fn) {\r\n    node.removeEventListener(eventName,fn)\r\n  },\r\n\r\n  //查找\r\n  find(selector,scope) {\r\n    return (scope || document).querySelectorAll(selector)\r\n  },\r\n  parent(node) {//查找它的父亲\r\n    return node.parentNode\r\n  },\r\n  children(node) {//查找它的儿子\r\n    return node.children\r\n  },\r\n  siblings(node) {//查找它的兄弟\r\n    return Array.from(node.parentNode.children).filter(n=>n!==node)\r\n  },\r\n  next(node) {//查找它的下一个节点\r\n    let x = node.nextSibling\r\n    while (x && x.nodeType === 3) {\r\n      // 3 代表是文本\r\n      x = x.nextSibling\r\n    }\r\n    return x\r\n  },\r\n  previous(node) {//查找上一个节点\r\n    let x = node.previousSibling\r\n    while (x && x.nodeType === 3) {\r\n      // 3 代表是文本\r\n      x = x.previousSibling\r\n    }\r\n    return x\r\n  },\r\n  each(nodeList,fn) {//遍历所有节点 适合统一添加样式\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null,nodeList[i])\r\n    }\r\n  },\r\n  index(node) {//看看这个节点排第几\r\n    const list = dom.children(node.parentNode)\r\n    let i\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break\r\n      }\r\n    }\r\n    return i\r\n  }\r\n};"]}