{"version":3,"sources":["main.js"],"names":["div","dom","find","style","divList","each","n","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAMA,MAAMC,IAAIC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAZ,EAAsC;AACtCD,IAAIE,KAAJ,CAAUH,GAAV,EAAe,OAAf,EAAwB,KAAxB,GAA+B;AAC/B,IAAMI,UAAUH,IAAIC,IAAJ,CAAS,MAAT,CAAhB,EAAiC;AACjCD,IAAII,IAAJ,CAASD,OAAT,EAAkB,UAACE,CAAD;AAAA,SAAMC,QAAQC,GAAR,CAAYF,CAAZ,CAAN;AAAA,CAAlB,GAAwC","file":"main.584f4f74.map","sourceRoot":"..\\src","sourcesContent":["// const div = dom.create(' <div>11111</div> ')\r\n//.tirm() 函数可以去除字符串两边的空格 \r\n// 为了<td></td>这个特殊的标签 所以需要一个容纳度高的盒子来容纳 具体看dom.js\r\n// console.log(div);\r\n// dom.after(test, div)\r\n// dom.before(test,div)\r\n// dom.append(test,div)\r\n// dom.wrap(test,div)\r\n// console.log(empty);\r\n// console.log(window.empty);\r\n// const sss = dom.empty(empty)\r\n// console.log(sss);\r\n// dom.attr(test, 'class', 'hicc')\r\n// console.log(test);\r\n// const ccc = dom.attr(test, 'class')\r\n// console.log(ccc);\r\n// dom.text(test,'sssssssss')\r\n// dom.html(test,'<div>kkk</div>')\r\n// dom.style(test,{border:'1px solid red',color:'blue'})\r\n// dom.class.add(test,'red')  \r\n// dom.class.add(test,'redsss')  \r\n// dom.class.remove(test,'redsss')  \r\n// const fn = () => {\r\n//   console.log('点击了');\r\n// }\r\n// dom.on(test, 'click',fn)\r\n// dom.off(test, 'click', fn)\r\n// const s = dom.find('#empty')[0]\r\n// const ss = dom.find('#e',xxx)[0]\r\n// console.log(s);\r\n// console.log(ss);\r\n// console.log(dom.parent(test)); \r\n// console.log(dom.siblings(e1)); \r\n// console.log(dom.previous(e1)); \r\n// console.log(dom.next(e1)); \r\n\r\n// const t = dom.find('#travel')[0]\r\n// dom.each(dom.children(t),(n)=>dom.style(n,'color','red'))\r\n\r\n// console.log(dom.index(t2));\r\nconst div = dom.find('#test>.red')[0] // 获取对应的元素\r\ndom.style(div, 'color', 'red') // 设置 div.style.color\r\nconst divList = dom.find('.red') // 获取多个 div.red 元素\r\ndom.each(divList, (n)=> console.log(n)) // 遍历 divList 里的所有元素"]}